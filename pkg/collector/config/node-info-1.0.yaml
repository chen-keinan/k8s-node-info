---
version: "1.0"
name: node-info-collector
title: "Node Specification for info collector"
collectors:
  - key: kubeAPIServerSpecFilePermission
    title: API server pod specification file permissions 
    nodeType: master
    audit: stat -c %a /etc/kubernetes/manifests/kube-apiserver.yaml
  - key: kubeAPIServerSpecFileOwnership
    title: API server pod specification file ownership 
    nodeType: master
    audit: stat -c %U:%G /etc/kubernetes/manifests/kube-apiserver.yaml
  - key: kubeControllerManagerSpecFilePermission
    title: Controller manager pod specification file permissions 
    nodeType: master
    audit: stat -c %a /etc/kubernetes/manifests/kube-controller-manager.yaml
  - key: kubeControllerManagerSpecFileOwnership
    title: Controller manager pod specification file ownership is set to root:root
    nodeType: master
    audit: stat -c %U:%G /etc/kubernetes/manifests/kube-controller-manager.yaml
  - key: kubeSchedulerSpecFilePermission
    title: Scheduler pod specification file permissions 
    nodeType: master
    audit: stat -c %a /etc/kubernetes/manifests/kube-scheduler.yaml
  - key: kubeSchedulerSpecFileOwnership
    title: Scheduler pod specification file ownership
    nodeType: master
    audit: stat -c %U:%G /etc/kubernetes/manifests/kube-scheduler.yaml
  - key: kubeEtcdSpecFilePermission
    title: Etcd pod specification file permissions 
    nodeType: master
    audit: stat -c %a /etc/kubernetes/manifests/etcd.yaml
  - key: kubeEtcdSpecFileOwnership
    title: Etcd pod specification file ownership
    nodeType: master
    audit: stat -c %U:%G /etc/kubernetes/manifests/etcd.yaml
  - key: ContainerNetworkInterfaceFilePermissions
    title: Container Network Interface file permissions
    nodeType: master
    audit: stat -c %a /*/cni/*
  - key: ContainerNetworkInterfaceFileOwnership
    title: Container Network Interface file ownership
    nodeType: master
    audit: stat -c %U:%G /*/cni/*
  - key: EtcdDataDirectoryPermissions
    title: Etcd data directory permissions
    nodeType: master
    audit: stat -c %a /var/lib/etcd
  - key: EtcdDataDirectoryOwnership
    title: Etcd data directory Ownership
    nodeType: master
    audit: stat -c %U:%G /var/lib/etcd
  - key: AdminConfFilePermissions
    title: admin.conf file permissions
    nodeType: master
    audit: stat -c %a /etc/kubernetes/admin.conf
  - key: AdminConfFileOwnership
    title: admin.conf file ownership
    nodeType: master
    audit: stat -c %U:%G /etc/kubernetes/admin.conf
  - key: SchedulerConfFilePermissions
    title: scheduler.conf file permissions
    nodeType: master
    audit: stat -c %a /etc/kubernetes/scheduler.conf
  - key: SchedulerConfFileOwnership
    title: scheduler.conf file ownership
    nodeType: master
    audit: stat -c %U:%G /etc/kubernetes/scheduler.conf
  - key: ControllerManagerConfFilePermissions
    title: controller-manager.conf file permissions
    nodeType: master
    audit: stat -c %a /etc/kubernetes/controller-manager.conf
  - key: ControllerManagerConfFileOwnership
    title: controller-manager.conf file ownership
    nodeType: master
    audit: stat -c %U:%G /etc/kubernetes/controller-manager.conf
  - key: KubePKIDirectoryFileOwnership
    title: Kubernetes PKI directory and file ownership
    nodeType: master
    audit: stat -c %U:%G $(ls -R /etc/kubernetes/pki/ | awk '/:$/&&f{s=$0;f=0}/:$/&&!f{sub(/:$/,"");s=$0;f=1;next}NF&&f{print s"/"$0 }')
  - key: KubernetesPKICertificateFilePermissions
    title: Kubernetes PKI certificate file permissions
    nodeType: master
    audit: stat -c %a $(ls -aR /etc/kubernetes/pki/ | awk '/:$/&&f{s=$0;f=0}/:$/&&!f{sub(/:$/,"");s=$0;f=1;next}NF&&f{print s"/"$0 }' | grep \.crt$)
  - key: KubePKIKeyFilePermissions
    title: Kubernetes PKI certificate file permissions
    nodeType: master
    audit: stat -c %a $(ls -aR /etc/kubernetes/pki/ | awk '/:$/&&f{s=$0;f=0}/:$/&&!f{sub(/:$/,"");s=$0;f=1;next}NF&&f{print s"/"$0 }' | grep \.key$)
  - key: kubeletServiceFilePermissions
    title: Kubelet service file permissions
    nodeType: worker
    audit: stat -c %a /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
  - key: kubeletServiceFileOwnership
    title: Kubelet service file ownership
    nodeType: worker
    audit: stat -c %U:%G /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
  - key: KubeconfigFileExistsPermissions 
    title: Kubeconfig file exists ensure permissions 
    nodeType: worker
    audit: output=`stat -c %a $(ps -ef | grep kube-proxy |grep 'kubeconfig' | grep -o 'kubeconfig=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1') 2>/dev/null` || echo $output
  - key: KubeconfigFileExistsPermissions 
    title: Kubeconfig file exists ensure ownership 
    nodeType: worker
    audit: output=`stat -c %U:%G $(ps -ef | grep kube-proxy |grep 'kubeconfig' | grep -o 'kubeconfig=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1') 2>/dev/null` || echo $output
  - key: kubeletConfFilePermissions
    title: kubelet.conf file permissions
    nodeType: worker
    audit: stat -c %a /etc/kubernetes/kubelet.conf
  - key: kubeletConfFileOwnership
    title: kubelet.conf file ownership
    nodeType: worker
    audit: stat -c %U:%G /etc/kubernetes/kubelet.conf
  - key: CertificateAuthoritiesFilePermissions
    title: Client certificate authorities file permissions
    nodeType: worker
    audit: stat -c %a $(ps -ef | grep kubelet |grep 'client-ca-file' | grep -o 'client-ca-file=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1') 2> /dev/null
  - key: CertificateAuthoritiesFileOwnership
    title: Client certificate authorities file ownership
    nodeType: worker
    audit: stat -c %U:%G $(ps -ef | grep kubelet |grep 'client-ca-file' | grep -o 'client-ca-file=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1') 2> /dev/null